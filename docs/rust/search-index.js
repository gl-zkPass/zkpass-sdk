var searchIndex = new Map(JSON.parse('[\
["zkpass_client",{"t":"CCCPPFFPPPPPPFFPKPPPPPPPPPPPPFFFPGPPGGFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNNNNNOOOOOOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNOOOOOONOOOONNNNNNNNNHNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOHOOOOOOHHHFFKKKKONNNNNNMNMNNNNNNMNNNMNNNNOMNNNNNNNNMMNNMNOOO","n":["core","helpers","interface","Bool","CustomError","DataVerificationRequest","Entry","ExpiredZkPassProof","FunctionRetrievalError","Int","InvalidPublicKey","InvalidZkVm","JoseError","Jwk","KeysetEndpoint","KeysetEndpoint","KeysetEndpointResolver","MismatchedDvrDigest","MismatchedDvrId","MismatchedDvrTitle","MismatchedDvrVerifyingKey","MismatchedUserDataVerifyingKey","MissingApiKey","MissingElementError","MissingKeysetEndpoint","MissingPublicKey","MissingRootDataElementError","MissingZkPassQueryLibrary","NotImplementedError","OutputReader","ProofMethodOutput","PublicKey","PublicKey","PublicKeyOption","QueryEngineError","Str","Val","ZkPassError","ZkPassProof","add","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","crv","decrypt_jwe_token","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","dvr_digest","dvr_id","dvr_id","dvr_title","dvr_title","dvr_verifying_key","dvr_verifying_key","encrypt_data_to_jwe_token","enumerate","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","find","find_bool","find_i64","find_string","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_json","get_key","get_sha256_digest","into","into","into","into","into","into","into","into","into","into","into","jku","jwt","key","kid","kid","kty","pretty_print","query","query_engine_ver","query_method_ver","result","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sign_data_to_jws_token","source","time_stamp","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pem","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","user_data_requests","user_data_verifying_keys","val","verify_jws_token","x","x","y","y","zkproof","zkvm","inject_client_version_header","package_version","wrap_single_user_data_input","ZkPassApiKey","ZkPassClient","ZkPassProofGenerator","ZkPassProofMetadataValidator","ZkPassProofVerifier","ZkPassUtility","api_key","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","decrypt_jwe_token","decrypt_jwe_token","encrypt_data_to_jwe_token","encrypt_data_to_jwe_token","fetch_public_keys","fmt","fmt","from","from","generate_zkpass_proof","generate_zkpass_proof","get_api_token","get_api_token","get_query_engine_version_info","get_query_engine_version_info","into","into","new","secret_api_key","sign_data_to_jws_token","sign_data_to_jws_token","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","validate","verify_jws_token","verify_jws_token","verify_zkpass_proof","verify_zkpass_proof_internal","verify_zkpass_proof_internal","zkpass_api_key","zkpass_service_url","zkvm"],"q":[[0,"zkpass_client"],[3,"zkpass_client::core"],[227,"zkpass_client::helpers"],[230,"zkpass_client::interface"],[280,"zkpass_query_types"],[281,"zkpass_core::interface"],[282,"alloc::string"],[283,"core::result"],[284,"serde::de"],[285,"serde_json::value"],[286,"alloc::vec"],[287,"core::option"],[288,"core::fmt"],[289,"josekit::jose_error"],[290,"core::future::future"],[291,"alloc::boxed"],[292,"core::pin"],[293,"serde::ser"],[294,"core::error"],[295,"core::any"],[296,"reqwest::async_impl::request"],[297,"std::collections::hash::map"],[298,"zkpass_core::jwt_helpers"]],"i":[0,0,0,7,14,0,0,14,14,7,14,14,14,0,0,8,0,14,14,14,14,14,14,14,14,14,14,14,14,0,0,0,8,0,14,7,0,0,0,1,1,14,4,5,6,7,8,2,17,9,10,1,14,4,5,6,7,8,2,17,9,10,4,5,6,7,8,2,9,10,4,5,6,7,8,2,9,10,10,0,4,5,6,7,8,2,17,9,10,17,17,9,17,9,17,9,0,1,4,5,6,7,8,9,5,5,5,7,7,7,1,1,1,1,14,14,4,5,6,7,8,2,17,9,10,1,14,14,4,5,6,7,8,2,17,9,10,1,28,9,1,14,4,5,6,7,8,2,17,9,10,6,10,2,6,10,10,1,9,9,9,5,4,5,6,7,8,2,17,9,10,0,14,17,4,5,6,7,8,2,9,10,4,14,1,14,4,5,6,7,8,2,17,9,10,1,14,4,5,6,7,8,2,17,9,10,1,14,4,5,6,7,8,2,17,9,10,9,17,2,0,4,10,4,10,17,9,0,0,0,0,0,0,0,0,0,37,39,37,39,37,37,37,38,39,38,39,39,39,37,39,37,40,39,39,37,41,39,39,37,39,37,38,39,37,39,37,39,37,39,37,42,38,39,41,41,39,39,39,39],"f":"```````````````````````````````````````{{bd}f}{ce{}{}}000000000000000000000{hh}{jj}{ll}{nn}{A`A`}{dd}{AbAb}{AdAd}{{ce}f{}{}}0000000`{{AfAf}{{An{{Aj{AhAh}}Al}}}}{c{{An{h}}}B`}{c{{An{j}}}B`}{c{{An{l}}}B`}{c{{An{n}}}B`}{c{{An{A`}}}B`}{c{{An{d}}}B`}{c{{An{Bb}}}B`}{c{{An{Ab}}}B`}{c{{An{Ad}}}B`}```````{{AfBd}{{An{AhAl}}}}{b{{Bf{d}}}}{{hh}Bh}{{jj}Bh}{{ll}Bh}{{nn}Bh}{{A`A`}Bh}{{AbAb}Bh}{{ce}Bh{}{}}00000{{bAf}{{Bj{n}}}}{{bAf}{{Bj{Bh}}}}{{bAf}{{Bj{Bl}}}}{{bAf}{{Bj{Ah}}}}{{AlBn}{{An{fC`}}}}0{{hBn}{{An{fC`}}}}{{jBn}Cb}{{lBn}{{An{fC`}}}}{{nBn}{{An{fC`}}}}{{A`Bn}{{An{fC`}}}}{{dBn}{{An{fC`}}}}{{BbBn}{{An{fC`}}}}{{AbBn}{{An{fC`}}}}{{AdBn}{{An{fC`}}}}{cc{}}0{CdAl}111111111{Af{{An{bCf}}}}{{ChAfAf}{{Cn{{Cl{Cj}}}}}}{AbAh}{ce{}{}}0000000000``````{AfAh}````{{hc}AnD`}{{jc}AnD`}{{lc}AnD`}{{nc}AnD`}{{A`c}AnD`}{{dc}AnD`}{{Bbc}AnD`}{{Abc}AnD`}{{Adc}AnD`}{{AfBd{Bj{l}}}{{An{AhAl}}}}{Al{{Bj{Db}}}}`<<<<<<<<{hAh}{cAh{}}{c{{An{e}}}{}{}}000000000000000000000{cDd{}}0000000000```{{AfAf}{{An{{Aj{BdAh}}Al}}}}``````{DfDf}{{}Af}{c{{Dh{Ahc}}}{}}```````{ce{}{}}000{DjDj}{{ce}f{}{}}{{DlAfAf}{{An{{Aj{AhAh}}Al}}}}{{DnAfAf}{{An{{Aj{AhAh}}Al}}}}{{DlAfBd}{{An{AhAl}}}}{{DnAfBd}{{An{AhAl}}}}{{DnAf}{{An{AdAl}}}}{{DnBn}Cb}{{DjBn}Cb}{cc{}}0{{E`{Dh{AhAh}}Af}{{Cn{{Cl{Cj}}}}}}{{Dn{Dh{AhAh}}Af}{{Cn{{Cl{Cj}}}}}}{Dn{{An{AhAl}}}}{DjAh}{Eb{{An{{Aj{AhAh}}Al}}}}{Dn{{An{{Aj{AhAh}}Al}}}}{ce{}{}}0{{Af{Bj{Dj}}Af}Dn}`{{DlAfBd{Bj{l}}}{{An{AhAl}}}}{{DnAfBd{Bj{l}}}{{An{AhAl}}}}3{c{{An{e}}}{}{}}000{cDd{}}0{{EdAf}{{An{{Aj{AbhEf}}Al}}}}{{DlAfAf}{{An{{Aj{BdAh}}Al}}}}{{DnAfAf}{{An{{Aj{BdAh}}Al}}}}{{EbAf{Cl{Ed}}}{{Cn{{Cl{Cj}}}}}}{{EbAf}{{Cn{{Cl{Cj}}}}}}{{DnAf}{{Cn{{Cl{Cj}}}}}}```","D":"Id","p":[[5,"OutputReader",3,280],[5,"Entry",3,280],[1,"unit"],[5,"PublicKey",3,281],[5,"ProofMethodOutput",3],[5,"KeysetEndpoint",3,281],[6,"Val",3,280],[6,"PublicKeyOption",3,281],[5,"DataVerificationRequest",3,281],[5,"Jwk",3,281],[1,"str"],[5,"String",282],[1,"tuple"],[6,"ZkPassError",3,281],[6,"Result",283],[10,"Deserializer",284],[5,"ZkPassProof",3,281],[6,"Value",285],[5,"Vec",286],[1,"bool"],[6,"Option",287],[1,"i64"],[5,"Formatter",288],[5,"Error",288],[8,"Result",288],[6,"JoseError",289],[6,"OutputReaderError",280],[10,"KeysetEndpointResolver",3,281],[10,"Future",290],[5,"Box",291],[5,"Pin",292],[10,"Serializer",293],[10,"Error",294],[5,"TypeId",295],[5,"RequestBuilder",296],[5,"HashMap",297],[5,"ZkPassApiKey",230],[10,"ZkPassUtility",230],[5,"ZkPassClient",230],[10,"ZkPassProofGenerator",230],[10,"ZkPassProofVerifier",230],[10,"ZkPassProofMetadataValidator",230],[1,"u64"]],"r":[[5,281],[6,280],[13,281],[14,281],[16,281],[29,280],[31,281],[33,281],[36,280],[37,281],[38,281],[79,298],[96,298],[171,298],[220,298]],"b":[[114,"impl-Debug-for-ZkPassError"],[115,"impl-Display-for-ZkPassError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAM4AGgABAAQABwAHABIADAAjAAIAKAAxAGEAHACAAAAAigAAAIwAAACZAAEAnAACAKMACgCvACoA3AABAN8AAADhAAAA5AABAO0ABgD1AAAA9wADAP4AAgACAQAABQEBAAgBBwASAQAAFQEDAA=="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
